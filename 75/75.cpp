2, 0, 2, 1, 1, 0 ---> ;
0, 0, 2, 1, 1, 2 ---> ;
0, 0, 2, 1, 1, 2 ---> ;
0, 0, 1, 1, 2, 2 ---> ;
0, 0, 1, 1, 2, 2 ---> ;
用zero指针表示0应该放置的位置，很明显它在数组的头部;
用two指针表示2应该放置的位置，它应该在数组的尾部;
用i表示当前元素.
当i指向的元素是2时，交换i与--two两个位置上的元素;
但不进行i++操作;
而当i指向的元素是0或1时，需要进行i++操作;
初始化时zero = -1; two = nums.size();

-----------------------
错误:
2, 0, 0, 1, 1, 2 --->;
2, 0, 0, 1, 1, 2 --->;
0, 2, 0, 1, 1, 2 --->;
0, 0, 2, 1, 1, 2 --->;
正确:
2, 0, 0, 1, 1, 2 --->;
2, 0, 0, 1, 1, 2 --->;
1, 0, 0, 1, 2, 2 --->;
1, 0, 0, 1, 2, 2 --->;
-----------------------
0, 0, 0, 1, 1, 1 --->;

-----------------------
挖坑法与快排;
2, 0, 2, 1, 1, 0 ---> ; tmp = 2;
0, 0, 2, 1, 1, 0 ---> ;
0, 0, 2, 1, 1, 2 ---> ;
0, 0, 2, 1, 1 ---> ; tmp = 0;

-----------------------
挖坑法与快排;
2, 0, 1, 1, 1, 0 --->; tmp = 2;
0, 0, 1, 1, 1, 0 ---> ;
0, 0, 1, 1, 1, 2 --->;
0, 0, 1, 1, 1 --->;

void sortColors(vector<int> &nums)
{
    int zero = -1;
    int two = nums.size();
    for (int i = 0; i < two; )
    {
        if (nums[i] == 1)
        {
            i++;
        }
        else if (nums[i] == 2)
        {
            two--;
            swap(nums[two], nums[i]);
        }
        else
        {
            zero++;
            swap(nums[zero], nums[i]);
            i++;
        }
    }
}
